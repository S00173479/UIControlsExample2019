@model UIControlsExample.Models.UINode

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UINode</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NodeID)

        <div class="form-group">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfHits, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.NumberOfHits, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfHits, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div id="slider" class="mt-5 mb-5 col-md-10 ppslider" />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-dark" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            var slider = document.getElementById("slider");
            console.log(slider);
            noUiSlider.create(slider, {
                start: 50,
                step: 1,
                range: {
                    min: 0,
                    max: 180
                },
                format: wNumb({
                    decimals: 0
                }),
                tooltips: true,
                pips: {
                    mode: 'values',
                    values: [0, 180],
                    density: 1
                }
            });
            slider.noUiSlider.on('update', function () {
                //var sliders = document.getElementsByClassName('ppslider');
                //for (let i = 0; i < sliders.length; i++)
                //    console.log({ 'slider id': sliders[i].classList });
                var val = slider.noUiSlider.get();
                //console.log({ 'slider val': val })
                $("#NumberOfHits").val(Math.round(val));
            });
        });

    </script>
}
